defmodule SectoryWeb.SbomVulnerabilityReportController do
  use SectoryWeb, :controller

  def show(conn, %{"id" => sbom_id} = _params) do
    analysis = Sectory.Analysis.AnalysisPresenter.for_sbom_id(sbom_id)
    report_render = render_report_pages(analysis)
    title_render = render_title_page(analysis)
    report_pdf_path = process_files(title_render, report_render)

    result =
      conn
      |> put_resp_header("content-disposition", ~s(attachment; filename="report.pdf"))
      |> send_file(200, report_pdf_path)

    Briefly.cleanup()
    result
  end

  defp render_title_page(analysis) do
    title_page_render_result =
      SectoryWeb.SbomVulnerabilityReportHTML.title_page(%{analysis: analysis, layout: false})

    title_page_full_render =
      SectoryWeb.Layouts.print_report(%{
        analysis: analysis,
        inner_content: title_page_render_result
      })

    IO.iodata_to_binary(Phoenix.HTML.Safe.to_iodata(title_page_full_render))
  end

  defp render_report_pages(analysis) do
    template_render_result =
      SectoryWeb.SbomVulnerabilityReportHTML.show(%{analysis: analysis, layout: false})

    full_render =
      SectoryWeb.Layouts.print_report(%{analysis: analysis, inner_content: template_render_result})

    IO.iodata_to_binary(Phoenix.HTML.Safe.to_iodata(full_render))
  end

  defp process_files(title_page_string, report_pages_string) do
    directory_path = Briefly.create!(directory: true)
    title_html_path = Path.join(directory_path, "title_page.html")
    report_html_path = Path.join(directory_path, "report_page.html")
    report_pdf_path = Path.join(directory_path, "report.pdf")
    IO.puts(report_pages_string)
    File.write!(title_html_path, title_page_string, [:binary])
    File.write!(report_html_path, report_pages_string, [:binary])
    asset_location = Path.join(:code.priv_dir(:sectory), "static/assets")
    image_location = Path.join(:code.priv_dir(:sectory), "static/images")
    {:ok, _cp_res} = File.cp_r(asset_location, Path.join(directory_path,"assets"))
    {:ok, _cp_img} = File.cp_r(image_location, Path.join(directory_path,"images"))

    {result, _stat} =
      System.cmd(
        "/usr/local/bin/wkhtmltopdf",
        [
          "-s",
          "A4",
          "--disable-smart-shrinking",
          "--allow",
          Path.join(directory_path,"assets"),
          "--allow",
          Path.join(directory_path,"images"),
          "cover",
          title_html_path,
          "toc",
          report_html_path,
          report_pdf_path
        ]
      )

    IO.inspect(result)
    report_pdf_path
  end
end
