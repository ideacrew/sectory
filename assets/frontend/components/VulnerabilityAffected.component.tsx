import { Component, Fragment } from "react";
import { CycloneDataLoader } from "../data/cyclone_data_loader"
import * as CycloneModel from "../cyclonedx/models";
import React from "react";

type PropsType  = {
  vulnerability: CycloneModel.Vulnerability
  dataLoader: CycloneDataLoader
}

export class VulnerabilityAffectedComponent extends Component<PropsType, any> {

  renderAffecteds(affects: Array<CycloneModel.AffectsRef>) {
    return affects.map((a,i) => {
      const c = this.props.dataLoader.componentHash.get(a.ref);
      if (c) {
        return <tr key={ "vuln-affected-row" + this.props.vulnerability["bom-ref"] + i}>
          <td>{c.name}</td>
          <td>{c.version}</td>
          <td>{c.purl}</td>
          <td>{c.cpe}</td>
        </tr>
      }
      return "";
    });
  }

  render() {
    if (this.props.vulnerability.affects) {
      const affects = this.props.vulnerability.affects;
      if (affects.length > 0) {
        return(
          <Fragment>
            <h3>Affected Components</h3>
            <table>
              <thead>
                <tr>
                  <th>Name</th>
                  <th>Version</th>
                  <th>PURL</th>
                  <th>CPE</th>
                </tr>
              </thead>
              <tbody>
                {this.renderAffecteds(affects)}
              </tbody>
            </table>
          </Fragment>
        );
      }
    }
    return "";
  }
}