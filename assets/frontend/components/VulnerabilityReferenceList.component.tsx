import { Component, ReactNode, Fragment } from "react";
import * as CycloneModel from "../cyclonedx/models";
import React from "react";

type PropsType  = {
  vulnerability: CycloneModel.Vulnerability
}

export class VulnerabilityReferenceListComponent extends Component<PropsType, any, any> {
  renderReferences(refs: CycloneModel.Reference[]) {
    return refs.map((r,i) => {
      return <tr key={ "vuln-reference-row" + this.props.vulnerability["bom-ref"] + i}>
        <td>{r.id}</td>
        <td>{r.source.name}</td>
        <td>{r.source.url}</td>
      </tr>
    })
  }

  render() : ReactNode | string {
    if (this.props.vulnerability.references) {
      const refs = this.props.vulnerability.references;
      if (refs.length > 0) {
        return(<Fragment>
          <h3>References</h3>
          <table>
            <thead>
              <tr>
                <th>ID</th>
                <th>Source</th>
                <th>URL</th>
              </tr>
            </thead>
            <tbody>
              {this.renderReferences(refs)}
            </tbody>
          </table>
        </Fragment>);
      }
    }
    return (
      ""
    );
  }
}