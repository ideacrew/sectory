import { Head, usePage, router } from '@inertiajs/react'
import { useState } from 'react'
import { SeverityOrder, VulnerablityAnalysisJustificationList, VulnerablityAnalysisResponseList, VulnerablityAnalysisStateList } from '../../cyclonedx/models'
import React from 'react'


export default function EditComponent({ vulnerability_analysis, update_url}) {
  const { errors } = usePage().props

  const [values, setValues] = useState({
    id: vulnerability_analysis.id,
    state: vulnerability_analysis.state,
    justification: vulnerability_analysis.justification,
    response: vulnerability_analysis.response,
    detail: vulnerability_analysis.detail,
    adjusted_severity: vulnerability_analysis.adjusted_severity
  });

  function handleChange(e) {
    setValues(values => ({
      ...values,
      [e.target.id]: e.target.value,
    }))
  }

  function optionsForState() {
    return VulnerablityAnalysisStateList.map(vas => <option key={vas} value={vas}>{vas}</option>);
  }

  function optionsForJustification() {
    return (
      [<option key="nada" value={undefined}>None</option>].concat(VulnerablityAnalysisJustificationList.map(vas => <option key={vas} value={vas}>{vas}</option>))
    );
  }

  function optionsForResponse() {
    return (
      [<option key="nada" value={undefined}>None</option>].concat(VulnerablityAnalysisResponseList.map(vas => <option key={vas} value={vas}>{vas}</option>))
    );
  }

  function optionsForSeverity() {
    return (
      [<option key="nada" value={undefined}>None</option>].concat(SeverityOrder.map(vas => <option key={vas} value={vas}>{vas}</option>))
    );
  }

  function handleSubmit(e) {
    e.preventDefault()
    router.put(update_url, values)
  }

  return (
    <>
      <Head title="Vulnerability Analysis" />
      <form onSubmit={handleSubmit} className="vulnerability-analysis-form-edit">
        <div className='form-horizontal'>
          <label htmlFor="state">
            State
          </label>
          <select id="state" name="state" onChange={handleChange} value={values.state}>
            {optionsForState()}
          </select>
          {errors.state && <div className="errors">{errors.state}</div>}
          <label htmlFor="justification">
            Justification
          </label>
          <select id="justification" name="justification" onChange={handleChange} value={values.justification}>
            {optionsForJustification()}
          </select>
          {errors.justification && <div className="errors">{errors.justification}</div>}
          <label htmlFor="response">
            Response
          </label>
          <select id="response" name="response" onChange={handleChange} value={values.response}>
            {optionsForResponse()}
          </select>
          {errors.response && <div className="errors">{errors.response}</div>}
          <label htmlFor="adjusted_severity">
            Adjusted Severity
          </label>
          <select id="adjusted_severity" name="adjusted_severity" onChange={handleChange} value={values.adjusted_severity}>
            {optionsForSeverity()}
          </select>
          {errors.adjusted_severity && <div className="errors">{errors.adjusted_severity}</div>}
          <label htmlFor="detail">
            Details
          </label>
          <textarea id="detail" name="detail" onChange={handleChange} value={values.detail}></textarea>
          {errors.detail && <div className="errors">{errors.detail}</div>}
          <input type='submit' value="Submit" className="btn btn-primary" />
        </div>
      </form>
    </>
  )
}